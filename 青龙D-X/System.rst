系统级算力
=================================================================================


风险点
---------------------------------------------------------------------------
* 行泊切换10秒,比如MED场景;
* 一旦面临使用环视的场景，仍然面临11V同时跑的场景;



参考方案
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. image:: /images/总线通讯拓扑.png  

.. note:: 
    * 2核 BPU AI引擎,高性能等效算力128 TOPS
    * 八核 Arm® Cortex® -A55 CPU集群
    * CV引擎,双核DSP,双核ISP,强力Codec


J5算力不足执行项
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* 低速场景下，进行降帧处理(由30帧降到20帧)，约地平线确认  --> 郝丽娟，闫瑞明  本周完成
* 行泊切换时间优化ADAS技术方案: 梳理行车场景下的进程和泊车场景下的进程，明确如何切换运行时的上下文相关进程;  -->高学新，臧立威，闫瑞明，刘力锋，吕晋 本周完成
* 行泊切换时间优化地平线方案:与地平线检讨单J5行泊一体的方案,不接受简单粗暴的硬重启,要考虑Docker快速重启方案  -->高学新，臧立威，闫瑞明，刘力锋，吕晋 本周完成

.. image:: /images/J5算力1.png
.. image:: /images/J5算力2.png
.. image:: /images/J5算力3.png
.. image:: /images/J5算力4.png

ODD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

任意驾驶循环，都有典型的空间分布；根据主维度向量的可视化显示，可以将设计运行与量化，从而定义出性能分级指标；

.. image:: /images/ODD.png
.. image:: /images/sys1.png
.. image:: /images/sys2.png
.. image:: /images/sys3.png
.. image:: /images/sys4.png
.. image:: /images/sys5.png
.. image:: /images/sys6.png
.. image:: /images/sys7.png
.. image:: /images/sys8.png
.. image:: /images/sys9.png
.. image:: /images/sys10.png
.. image:: /images/sys11.png



